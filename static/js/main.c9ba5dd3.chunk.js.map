{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/BurgerIngredients/utils/utils.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/WithAxiosErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","reportWebVitals.js","index.js"],"names":["BurgerIngredients","props","ingredient","ingredientsMap","Map","set","className","get","ingredientsView","type","propTypes","PropTypes","string","isRequired","Burger","ingredients","transformedIngredients","key","i","push","flat","length","BuildControl","label","added","removed","disabled","onClick","controls","BuildControls","ingredientAdded","ingredientRemoved","price","purchasable","ordered","toFixed","map","control","Backdrop","show","clicked","Modal","memo","children","modalClosed","style","transform","opacity","Button","btnType","join","OrderSummary","purchaseCancelled","purchaseContinue","ingredientSummary","Object","keys","igKey","textTransform","axiosInstance","axios","create","baseURL","Spinner","WithAxiosErrorHandler","WrappedComponent","state","error","errorConfirmHandler","setState","this","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","res","eject","message","Component","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","useState","setIngredients","totalPrice","setTotalPrice","setPurchasable","purchasing","setPurchasing","loading","err","setError","history","useHistory","updatePurchaseState","myIngredients","sum","reduce","el","useEffect","then","data","catch","purchaseCancelHandler","disabledInfo","queryParams","encodeURIComponent","queryString","pathname","search","updatedCount","updatedIngredients","oldCount","Logo","height","backgroundColor","padding","boxSizing","borderRadius","src","burgerLogo","alt","NavigationItem","link","to","exact","NavigationItems","DrawerToggle","Toolbar","drawerToggleClicked","SideDrawer","closed","open","attachedClasses","Layout","showSideDrawer","setShowSideDrawer","CheckoutSummary","checkoutCancelled","checkoutContinued","width","margin","ContactData","userName","setUserName","email","setEmail","street","setStreet","postalCode","setPostalCode","setLoading","onSubmit","console","log","name","placeholder","value","onChange","e","target","event","preventDefault","order","customer","address","zipCode","country","deliveryMethod","post","Checkout","location","useLocation","match","useRouteMatch","query","URLSearchParams","entries","param","replace","goBack","path","render","Order","currentIngredients","ingredientName","amount","ingredientsOutput","ig","border","display","Orders","orders","setOrders","fetchedOrders","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","MyApp","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9ba5dd3.chunk.js","sourcesContent":["import \"./BurgerIngredients.css\";\nimport PropTypes from \"prop-types\";\nimport { ingredientsView } from \"./utils/utils\";\n\nconst BurgerIngredients = (props) => {\n  const { type } = props;\n\n  const ingredient = ingredientsView(type);\n  return ingredient;\n};\n\nBurgerIngredients.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nexport { BurgerIngredients };\n","export const ingredientsView = (ingredient) => {\n  const ingredientsMap = new Map();\n\n  ingredientsMap.set(\n    \"bread-bottom\",\n    <div className=\"BurgerIngredients_BreadBottom\"></div>\n  );\n  ingredientsMap.set(\n    \"bread-top\",\n    <div className=\"BurgerIngredients_BreadTop\">\n      <div className=\"BurgerIngredients_Seeds1\"></div>\n      <div className=\"BurgerIngredients_Seeds2\"></div>\n    </div>\n  );\n  ingredientsMap.set(\"meat\", <div className=\"BurgerIngredients_Meat\"></div>);\n  ingredientsMap.set(\n    \"cheese\",\n    <div className=\"BurgerIngredients_Cheese\"></div>\n  );\n  ingredientsMap.set(\"salad\", <div className=\"BurgerIngredients_Salad\"></div>);\n  ingredientsMap.set(\"bacon\", <div className=\"BurgerIngredients_Bacon\"></div>);\n\n  return ingredientsMap.get(ingredient) || null;\n};\n","import \"./Burger.css\";\nimport { BurgerIngredients } from \"./BurgerIngredients/BurgerIngredients.js\";\n\nconst Burger = (props) => {\n  const { ingredients } = props;\n\n  let transformedIngredients = [];\n  for (let key in ingredients) {\n    for (let i = 0; i < ingredients[key]; i++) {\n      transformedIngredients.push(\n        <BurgerIngredients key={key + i} type={key} />\n      );\n    }\n  }\n  // Return only 1 empty array if no ingredients are added.\n  transformedIngredients = transformedIngredients.flat();\n\n  return (\n    <div className=\"Burger\">\n      <BurgerIngredients type=\"bread-top\" />\n      {transformedIngredients.length === 0\n        ? \"Please start adding ingredients!\"\n        : transformedIngredients}\n      <BurgerIngredients type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport { Burger };\n","import \"./BuildControl.css\";\n\nconst BuildControl = (props) => {\n  const { label, added, removed, disabled } = props;\n  return (\n    <div className={\"BuildControl\"}>\n      <div className={\"BuildControl_Label\"}>{label}</div>\n      <button className={\"Less\"} onClick={removed} disabled={disabled}>\n        Less\n      </button>\n      <button className={\"More\"} onClick={added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport { BuildControl };\n","import { BuildControl } from \"./BuildControl/BuildControl\";\nimport \"./BuildControls.css\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" },\n];\n\nconst BuildControls = (props) => {\n  const {\n    ingredientAdded,\n    ingredientRemoved,\n    disabled,\n    price,\n    purchasable,\n    ordered,\n  } = props;\n  return (\n    <div className=\"BuildControls\">\n      <p>\n        Current price: <strong>{price.toFixed(2)}</strong>\n      </p>\n      {controls.map((control) => (\n        <BuildControl\n          key={control.label}\n          label={control.label}\n          added={() => ingredientAdded(control.type)}\n          removed={() => ingredientRemoved(control.type)}\n          disabled={disabled[control.type]}\n        />\n      ))}\n\n      <button className=\"OrderButton\" disabled={!purchasable} onClick={ordered}>\n        ORDER NOW\n      </button>\n    </div>\n  );\n};\n\nexport { BuildControls };\n","import \"./Backdrop.css\";\n\nconst Backdrop = (props) => {\n  const { show, clicked } = props;\n\n  return show ? <div className=\"Backdrop\" onClick={clicked}></div> : null;\n};\n\nexport { Backdrop };\n","import \"./Modal.css\";\nimport { Backdrop } from \"../Backdrop/Backdrop\";\nimport { memo } from \"react\";\n\nconst Modal = memo((props) => {\n  const { children, show, modalClosed } = props;\n  return (\n    <>\n      <Backdrop show={show} clicked={modalClosed} />\n      <div\n        className=\"Modal\"\n        style={{\n          transform: show ? \"translateY(0)\" : \"translateY(-100vh)\",\n          opacity: show ? \"1\" : \"0\",\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n});\n\nexport { Modal };\n","import \"./Button.css\";\n\nconst Button = (props) => {\n  const { children, clicked, btnType } = props;\n  const className = [\"Button\", btnType];\n\n  return (\n    <button className={className.join(\" \")} onClick={clicked}>\n      {children}\n    </button>\n  );\n};\nexport { Button };\n","import { Button } from \"../../UI/Button/Button\";\n\nconst OrderSummary = (props) => {\n  const { ingredients, purchaseCancelled, purchaseContinue, price } = props;\n  const ingredientSummary = Object.keys(ingredients).map((igKey) => (\n    <li key={igKey}>\n      <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:\n      {ingredients[igKey]}\n    </li>\n  ));\n  return (\n    <>\n      <h3>Your order</h3>\n      <p>A delicious burger with the following ingredients:</p>\n      <ul>{ingredientSummary}</ul>\n      <p>\n        <strong>Total price: {price.toFixed(2)}</strong>\n      </p>\n      <p>Continue to checkout?</p>\n      <Button btnType={\"Danger\"} clicked={purchaseCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType={\"Success\"} clicked={purchaseContinue}>\n        CONTINUE\n      </Button>\n    </>\n  );\n};\n\nexport { OrderSummary };\n","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"https://react-burger-9045d-default-rtdb.firebaseio.com/\",\n});\n\nexport { axiosInstance };\n","import \"./Spinner.css\";\n\nconst Spinner = (props) => {\n  return <div className=\"Spinner\">Loading...</div>;\n};\n\nexport { Spinner };\n","import { Component } from \"react\";\nimport { Modal } from \"../components/UI/Modal/Modal\";\n\nconst WithAxiosErrorHandler = (WrappedComponent, axios) => {\n  return class ErrorHandler extends Component {\n    state = {\n      error: null,\n    };\n\n    componentDidMount() {\n      this.requestInterceptor = axios.interceptors.request.use((req) => {\n        this.setState({ error: null });\n        return req;\n      });\n\n      this.responseInterceptor = axios.interceptors.response.use(\n        (res) => res,\n        (error) => {\n          this.setState({ error });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.requestInterceptor);\n      axios.interceptors.response.eject(this.responseInterceptor);\n    }\n\n    errorConfirmHandler = () => this.setState({ error: null });\n    render() {\n      return (\n        <>\n          <Modal show={this.state.error} modalClosed={this.errorConfirmHandler}>\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </>\n      );\n    }\n  };\n};\n\nexport { WithAxiosErrorHandler };\n","import { useEffect, useState } from \"react\";\nimport { Burger } from \"../../components/Burger/Burger\";\nimport { BuildControls } from \"../../components/Burger/BuildControls/BuildControls\";\nimport { Modal } from \"../../components/UI/Modal/Modal\";\nimport { OrderSummary } from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport { axiosInstance } from \"../../axios-orders\";\nimport { Spinner } from \"../../components/UI/Spinner/Spinner\";\nimport { WithAxiosErrorHandler } from \"../../hoc/WithAxiosErrorHandler\";\nimport { useHistory } from \"react-router-dom\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nconst _BurgerBuilder = (props) => {\n  // const [ingredients, setIngredients] = useState({\n  //   salad: 2,\n  //   bacon: 1,\n  //   cheese: 1,\n  //   meat: 0,\n  // });\n  const [ingredients, setIngredients] = useState(null);\n  const [totalPrice, setTotalPrice] = useState(4);\n  const [purchasable, setPurchasable] = useState(true);\n  // Check if I you are in a purchasable mode\n  const [purchasing, setPurchasing] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [err, setError] = useState(false);\n  const history = useHistory();\n\n  const updatePurchaseState = (myIngredients) => {\n    // const myIngredients = { ...ingredients };\n    const sum = Object.keys(myIngredients)\n      .map((igKey) => {\n        return myIngredients[igKey];\n      })\n      .reduce((sum, el) => sum + el, 0);\n\n    setPurchasable(sum > 0);\n  };\n\n  useEffect(() => {\n    axiosInstance\n      .get(\n        \"https://react-burger-9045d-default-rtdb.firebaseio.com/ingredients.json\"\n      )\n      .then((response) => {\n        setIngredients(response.data);\n      })\n      .catch((err) => setError(true));\n  }, []);\n\n  const addIngredientHandler = (type) => {\n    const oldCount = ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = { ...ingredients };\n    updatedIngredients[type] = updatedCount;\n    setIngredients(updatedIngredients);\n\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = totalPrice;\n    setTotalPrice(oldPrice + priceAddition);\n    updatePurchaseState(updatedIngredients);\n  };\n\n  const removeIngredientHandler = (type) => {\n    const oldCount = ingredients[type];\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = { ...ingredients };\n    updatedIngredients[type] = updatedCount;\n    setIngredients(updatedIngredients);\n\n    const priceDeduction = INGREDIENT_PRICES[type];\n    const oldPrice = totalPrice;\n    setTotalPrice(oldPrice - priceDeduction);\n    updatePurchaseState(updatedIngredients);\n  };\n\n  const purchaseHandler = () => {\n    setPurchasing(true);\n  };\n\n  const purchaseCancelHandler = () => {\n    setPurchasing(false);\n  };\n\n  const purchaseContinueHandler = () => {\n    history.push(\"/checkout\");\n    const queryParams = [];\n    for (let i in ingredients) {\n      queryParams.push(\n        encodeURIComponent(i) + \"=\" + encodeURIComponent(ingredients[i])\n      );\n    }\n\n    queryParams.push('price=' + totalPrice);\n    const queryString = queryParams.join(\"&\");\n\n    history.push({\n      pathname: \"/checkout\",\n      search: \"?\" + queryString,\n    });\n\n  };\n\n  const disabledInfo = { ...ingredients };\n  for (let key in disabledInfo) {\n    disabledInfo[key] = disabledInfo[key] <= 0;\n  }\n  return (\n    <>\n      <Modal show={purchasing} modalClosed={purchaseCancelHandler}>\n        {loading || !ingredients ? (\n          err ? (\n            <p>Ingredients can't be loaded</p>\n          ) : (\n            <Spinner />\n          )\n        ) : (\n          <OrderSummary\n            ingredients={ingredients}\n            price={totalPrice}\n            purchaseCancelled={purchaseCancelHandler}\n            purchaseContinue={purchaseContinueHandler}\n          />\n        )}\n      </Modal>\n      {ingredients ? (\n        <>\n          <Burger ingredients={ingredients} />\n          <BuildControls\n            ingredientAdded={addIngredientHandler}\n            ingredientRemoved={removeIngredientHandler}\n            disabled={disabledInfo}\n            purchasable={purchasable}\n            ordered={purchaseHandler}\n            price={totalPrice}\n          />\n        </>\n      ) : err ? (\n        <p>Ingredients can't be loaded</p>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\nconst BurgerBuilder = WithAxiosErrorHandler(_BurgerBuilder, axiosInstance);\nexport { BurgerBuilder };\n","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import burgerLogo from \"../../assets/images/burger-logo.png\";\nconst Logo = (props) => {\n  const { height } = props;\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        padding: \"8px\",\n        height: height || \"100%\",\n        boxSizing: \"border-box\",\n        borderRadius: \"10px\",\n      }}\n    >\n      <img style={{ height: \"100%\" }} src={burgerLogo} alt=\"burger\" />\n    </div>\n  );\n};\n\nexport { Logo };\n","import { NavLink } from \"react-router-dom\";\nimport \"./NavigationItem.css\";\nconst NavigationItem = (props) => {\n  const { link, children } = props;\n  return (\n    <li className=\"NavigationItem\">\n      <NavLink to={link} exact>\n        {children}\n      </NavLink>\n    </li>\n  );\n};\n\nexport { NavigationItem };\n","import { NavigationItem } from \"../NavigationItem/NavigationItem.js\";\n\nimport \"./NavigationItems.css\";\nconst NavigationItems = (props) => {\n  return (\n    <ul className=\"NavigationItems\">\n      <NavigationItem link=\"/\">BurgerBuilder</NavigationItem>\n      <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n  );\n};\n\nexport { NavigationItems };\n","import \"./DrawerToggle.css\";\nconst DrawerToggle = (props) => {\n  const { clicked } = props;\n  return (\n    <div onClick={clicked} className=\"DrawerToggle\">\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport { DrawerToggle };\n","import \"./Toolbar.css\";\nimport { Logo } from \"../../Logo/Logo\";\nimport { NavigationItems } from \"../NavigationItems/NavigationItems\";\nimport { DrawerToggle } from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nconst Toolbar = (props) => {\n  const { drawerToggleClicked } = props;\n  return (\n    <header className=\"Toolbar\">\n      <DrawerToggle clicked={drawerToggleClicked} />\n      <Logo height=\"80%\" />\n      <nav className=\"DesktopOnly\">\n        <NavigationItems />\n      </nav>\n    </header>\n  );\n};\n\nexport { Toolbar };\n","import { Logo } from \"../../Logo/Logo\";\nimport { NavigationItems } from \"../NavigationItems/NavigationItems\";\nimport { Backdrop } from \"../../UI/Backdrop/Backdrop\";\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const { closed, open } = props;\n  const attachedClasses = open ? \"SideDrawer_Open\" : \"SideDrawer_Close\";\n  return (\n    <>\n      <Backdrop show={open} clicked={closed} />\n      <div className={`SideDrawer ${attachedClasses}`}>\n        <Logo height=\"11%\" />\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport { SideDrawer };\n","import \"./Layout.css\";\nimport { Toolbar } from \"../../components/Navigation/Toolbar/Toolbar\";\nimport { SideDrawer } from \"../../components/Navigation/SideDrawer/SideDrawer\";\nimport { useState } from \"react\";\n\nconst Layout = (props) => {\n  const { children } = props;\n\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\n  const sideDrawerCloseHandler = () => setShowSideDrawer(false);\n  const sideDrawerToggleHandler = () => setShowSideDrawer(!showSideDrawer);\n\n  return (\n    <>\n      <Toolbar drawerToggleClicked={sideDrawerToggleHandler} />\n      <SideDrawer open={showSideDrawer} closed={sideDrawerCloseHandler} />\n      <main>{children}</main>\n    </>\n  );\n};\n\nexport { Layout };\n","import { Burger } from \"../../Burger/Burger\";\nimport { Button } from \"../../UI/Button/Button\";\nimport \"./CheckoutSummary.css\";\n\nconst CheckoutSummary = (props) => {\n  const { ingredients, checkoutCancelled, checkoutContinued } = props;\n  return (\n    <div className={\"CheckoutSummary\"}>\n      <h1>We hope it taste well</h1>\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\n        <Burger ingredients={ingredients} />\n      </div>\n      <Button btnType=\"Danger\" clicked={checkoutCancelled}>\n        CANCEL\n      </Button>\n      <Button btnType=\"Success\" clicked={checkoutContinued}>\n        CONTINUE\n      </Button>\n    </div>\n  );\n};\n\nexport { CheckoutSummary };\n","import { useRef, useState } from \"react\";\nimport \"./ContactData.css\";\n\nimport { Button } from \"../../../components/UI/Button/Button\";\nimport { axiosInstance } from \"../../../axios-orders\";\nimport { Spinner } from \"../../../components/UI/Spinner/Spinner\";\nimport { useHistory } from \"react-router\";\nconst ContactData = (props) => {\n  const { ingredients, price } = props;\n\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const orderHandler = (event) => {\n    event.preventDefault();\n    console.log(ingredients);\n    setLoading(true);\n    const order = {\n      ingredients: ingredients,\n      price: price,\n      customer: {\n        name: userName,\n        address: {\n          street: street,\n          zipCode: postalCode,\n          country: \"DE\",\n        },\n        email: email,\n        deliveryMethod: \"fastest\",\n      },\n    };\n\n    axiosInstance\n      .post(\"/orders.json\", order)\n      .then((response) => {\n        setUserName(\"\");\n        setStreet(\"\");\n        setEmail(\"\");\n        setPostalCode(\"\");\n        setLoading(false);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"ContactData\">\n      <h4>Enter your contact data</h4>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <form onSubmit={() => console.log(\"submitted\")}>\n            <input\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Your username\"\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Your email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              name=\"street\"\n              placeholder=\"Your street\"\n              value={street}\n              onChange={(e) => setStreet(e.target.value)}\n            />\n            <input\n              type=\"text\"\n              name=\"postalCode\"\n              placeholder=\"Your postal code\"\n              value={postalCode}\n              onChange={(e) => setPostalCode(e.target.value)}\n            />\n          </form>\n          <Button btnType=\"Success\" clicked={orderHandler}>\n            ORDER\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport { ContactData };\n","import {useEffect, useState} from \"react\";\nimport {\n  Route,\n  useHistory,\n  useLocation,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport {CheckoutSummary} from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport {ContactData} from \"./ContactData/ContactData\";\n\nconst Checkout = (props) => {\n  const [ingredients, setIngredients] = useState({\n    salad: 2,\n    bacon: 1,\n    cheese: 1,\n    meat: 1,\n  });\n  const [totalPrice, setTotalPrice] = useState(0);\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    const query = new URLSearchParams(location.search);\n    const ingredients = {};\n    let price = 0;\n    for (let param of query.entries()) {\n      if (param[0] === 'price') {\n        price = param[1];\n      } else {\n        // [cheese, 1]\n        ingredients[param[0]] = +param[1];\n      }\n\n    }\n    setIngredients(ingredients);\n    setTotalPrice(price);\n  }, []);\n\n  const checkoutContinuedHandler = () => {\n    history.replace(\"/checkout/contact-data\");\n  };\n  const checkoutCancelledHandler = () => {\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <CheckoutSummary\n        ingredients={ingredients}\n        checkoutContinued={checkoutContinuedHandler}\n        checkoutCancelled={checkoutCancelledHandler}\n      />\n      <Route path={match.path + \"/contact-data\"}\n        render={() => <ContactData ingredients={ingredients} price={totalPrice} />} />\n    </div>\n  );\n};\n\nexport {Checkout};\n","export const Order = (props) => {\n  const { price, ingredients } = props;\n\n  const currentIngredients = [];\n\n  for (let ingredientName in ingredients) {\n    currentIngredients.push({\n      name: ingredientName,\n      amount: ingredients[ingredientName],\n    });\n  }\n\n  const ingredientsOutput = currentIngredients.map((ig) => {\n    return (\n      <span\n        key={ig.name}\n        style={{\n          textTransform: \"capitalize\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\",\n          display: \"inline-block\",\n        }}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"Order\">\n      <p>Ingredients: {ingredientsOutput}</p>\n      <p>\n        Price: <strong>USD {price.toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Order } from \"../../components/Order/Order\";\nimport { axiosInstance } from \"../../axios-orders\";\nimport { WithAxiosErrorHandler } from \"../../hoc/WithAxiosErrorHandler\";\n\nexport const _Orders = (props) => {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axiosInstance\n      .get(\"/orders.json\")\n      .then((res) => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({ ...res.data[key], id: key });\n        }\n        setOrders(fetchedOrders);\n        setLoading(false);\n      })\n      .catch((err) => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      {orders.map((order) => {\n        return (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={+order.price}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport const Orders = WithAxiosErrorHandler(_Orders, axiosInstance);\n","import \"./App.css\";\nimport { BurgerBuilder } from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport { Layout } from \"./containers/Layout/Layout\";\nimport { Checkout } from \"./containers/Checkout/Checkout\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Orders } from \"./containers/Orders/Orders\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/checkout\">\n          <Checkout />\n        </Route>\n        <Route path=\"/orders\">\n          <Orders />\n        </Route>\n        <Route path=\"/\" exact>\n          <BurgerBuilder />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst MyApp = (\n  <BrowserRouter basename=\"BurgerBuilder\">\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>{MyApp}</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}